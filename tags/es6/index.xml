<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Es6 on CayChance の Blog</title>
    <link>https://caychance.github.io/tags/es6/</link>
    <description>Recent content in Es6 on CayChance の Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Fri, 30 Nov 2018 10:58:47 +0000</lastBuildDate>
    
	<atom:link href="https://caychance.github.io/tags/es6/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>函数参数的解构赋值和函数参数的默认值</title>
      <link>https://caychance.github.io/posts/%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0%E7%9A%84%E8%A7%A3%E6%9E%84%E8%B5%8B%E5%80%BC%E5%92%8C%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0%E7%9A%84%E9%BB%98%E8%AE%A4%E5%80%BC/</link>
      <pubDate>Fri, 30 Nov 2018 10:58:47 +0000</pubDate>
      
      <guid>https://caychance.github.io/posts/%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0%E7%9A%84%E8%A7%A3%E6%9E%84%E8%B5%8B%E5%80%BC%E5%92%8C%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0%E7%9A%84%E9%BB%98%E8%AE%A4%E5%80%BC/</guid>
      <description>昨天在二刷阮一峰es6的时候，看到了一个思考题。
// 写法一 function m1({x = 0, y = 0} = {}) { return [x, y]; } // 写法二 function m2({x, y} = { x: 0, y: 0 }) { return [x, y]; }  以上两种写法的差异在哪里？
写法一中m1函数的入参是一个对象（默认值为一个空对象），该对象有两个属性，x（默认值为0）和y（默认值为0）。
写法二中m2函数的入参是一个对象（默认值为一个对象，对象x和y属性都为0）。
// 函数没有参数的情况 m1() // [0, 0] m2() // [0, 0]  // x 和 y 都有值的情况 m1({x: 3, y: 8}) // [3, 8] m2({x: 3, y: 8}) // [3, 8]  // x 有值，y 无值的情况 m1({x: 3}) // [3, 0] m2({x: 3}) // [3, undefined]  // x 和 y 都无值的情况 m1({}) // [0, 0]; m2({}) // [undefined, undefined]  m1({z: 3}) // [0, 0] m2({z: 3}) // [undefined, undefined]  参考链接-阮一峰es6</description>
    </item>
    
  </channel>
</rss>