<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Diff算法 on CayChance の Blog</title>
    <link>https://caychance.github.io/tags/diff%E7%AE%97%E6%B3%95/</link>
    <description>Recent content in Diff算法 on CayChance の Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Tue, 02 Apr 2019 19:08:09 +0000</lastBuildDate>
    
	<atom:link href="https://caychance.github.io/tags/diff%E7%AE%97%E6%B3%95/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>diff算法</title>
      <link>https://caychance.github.io/posts/diff%E7%AE%97%E6%B3%95/</link>
      <pubDate>Tue, 02 Apr 2019 19:08:09 +0000</pubDate>
      
      <guid>https://caychance.github.io/posts/diff%E7%AE%97%E6%B3%95/</guid>
      <description>Virtual DOM 因为如果在项目中大量的操作dom会很影响性能，所以Vue和React都尝试使用虚拟dom（virtual dom）。虚拟dom的本质其实就是用一个对象去描述整个dom结构，包括：当前dom的tag标签，data，children子节点，text文本，elm，key等等等，属性很多，就不一一列举了。
virtual dom真的比DOM操作效率高吗？不一定，那使用virtual dom的优势是什么呢？
使用虚拟dom的优势：
 不用手动频繁操作dom 框架跨平台 可以更好的实现SSR，同构渲染 组件的高度抽象化  总之，大大的提高了我们的工作效率。
export default class VNode { tag: string | void; data: VNodeData | void; children: ?Array&amp;lt;VNode&amp;gt;; text: string | void; elm: Node | void; ns: string | void; context: Component | void; // rendered in this component&amp;#39;s scope  key: string | number | void; componentOptions: VNodeComponentOptions | void; componentInstance: Component | void; // component instance  parent: VNode | void; // component placeholder node  // strictly internal  raw: boolean; // contains raw HTML?</description>
    </item>
    
  </channel>
</rss>